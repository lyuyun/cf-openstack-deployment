meta:
  environment: ~
  default_quota_definitions:
    default:
       memory_limit: 10240
       total_services: 100
       non_basic_services_allowed: true
       total_routes: 1000
       trial_db_allowed: true

properties:
  secret: (( merge ))
  domain: (( merge ))
  use_protocol: (( merge ))
  use_nossl: (( merge ))

  loggregator_endpoint:
    shared_secret: (( merge ))

  cc:
    jobs:
      global:
        timeout_in_seconds: 14400 # 4 hours
      app_bits_packer:
        timeout_in_seconds: ~
      app_events_cleanup:
        timeout_in_seconds: ~
      app_usage_events_cleanup:
        timeout_in_seconds: ~
      blobstore_delete:
        timeout_in_seconds: ~
      blobstore_upload:
        timeout_in_seconds: ~
      droplet_deletion:
        timeout_in_seconds: ~
      droplet_upload:
        timeout_in_seconds: ~
      model_deletion:
        timeout_in_seconds: ~

    app_events:
      cutoff_age_in_days: 31
    app_usage_events:
      cutoff_age_in_days: 31
    audit_events:
      cutoff_age_in_days: 31

    billing_event_writing_enabled: true

    process_group: cloud_controller

    hm9000_noop: false
    diego: false
    default_app_memory: 1024
    maximum_app_disk_in_mb: 2048
    client_max_body_size: 256M

    srv_api_uri: (( use_protocol "://api." domain ))

    bulk_api_password: (( merge ))

    staging_upload_user: (( merge ))
    staging_upload_password: (( merge ))

    db_encryption_key: (( merge ))

    tasks_disabled: false

    disable_custom_buildpacks: false

    broker_client_timeout_seconds: 70

    resource_pool:
      resource_directory_key: (( domain "-cc-resources" ))
      fog_connection: ~
      cdn: ~

    packages:
      app_package_directory_key: (( domain "-cc-packages" ))
      fog_connection: ~
      cdn: ~

    droplets:
      droplet_directory_key: (( domain "-cc-droplets" ))
      fog_connection: ~
      cdn: ~

    development_mode: false

    newrelic:
      license_key: ~
      environment_name: (( meta.environment ))
      developer_mode: (( cc.development_mode ))
      monitor_mode: (( merge || false ))
      capture_params: (( merge || false ))
      transaction_tracer:
        enabled: (( merge || true ))
        record_sql: (( merge || "obfuscated" ))

    buildpacks:
      buildpack_directory_key: (( domain "-cc-buildpacks" ))
      fog_connection: ~
      cdn: ~
    quota_definitions: (( merge || meta.default_quota_definitions ))
    default_quota_definition: default
    install_buildpacks:
      - name: java_buildpack
        package: buildpack_java
      - name: ruby_buildpack
        package: buildpack_ruby
      - name: node_buildpack
        package: buildpack_node

  login:
    url: ~
    catalina_opts: (( merge ))
    enabled: true
    uaa_certificate: (( merge ))
    protocol: (( use_protocol )) ### NEEDS TO BE CHANGED
    brand: oss
    links:
      home: (( use_protocol "://console." domain ))
      passwd: (( use_protocol "://console." domain "/password_resets/new" ))
      signup: ((  use_protocol "://console." domain "/register" ))

  uaa_endpoint: (( use_protocol "://uaa." domain ))

  uaa:
    catalina_opts: (( merge ))
    url: (( use_protocol "://uaa." domain ))
    no_ssl: (( use_nossl )) ### NEEDS TO BE CHANGED
    scim:
      users: (( merge ))
    jwt:
      signing_key: (( merge ))
      verification_key: (( merge ))
    cc:
      client_secret: (( merge ))
    admin:
      client_secret: (( merge ))
    batch:
      username: (( merge ))
      password: (( merge ))

    login:
      addnew: true

    client:
      autoapprove:
        - cf
    clients:
      cf:
        id: cf
        override: true
        authorized-grant-types: password,implicit,refresh_token
        authorities: uaa.none
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write
        access-token-validity: 7200
        refresh-token-validity: 1209600
      login:
        id: login
        override: true
        scope: openid,oauth.approvals
        authorities: oauth.login
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: (( use_protocol "://login." domain ))
      developer_console:
        override: true
        scope: openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support
        authorities: scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,billing.admin
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( use_protocol "://console." domain "/oauth/callback" ))
      app-direct:
        override: true
        authorities: app_direct_invoice.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,password,refresh_token,implicit
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( properties.login.links.home ))
      support-services:
        scope: scim.write,scim.read,openid,cloud_controller.read,cloud_controller.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        redirect-uri: (( "http://support-signon." domain ))
        authorities: portal.users.read
        access-token-validity: 1209600
        refresh-token-validity: 1209600
      servicesmgmt:
        secret: (( merge ))
        scope: openid,cloud_controller.read,cloud_controller.write
        authorities: uaa.resource,oauth.service,clients.read,clients.write,clients.secret
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        redirect-uri: (( "http://servicesmgmt." domain "/auth/cloudfoundry/callback" ))
        override: true
        autoapprove: true
      space-mail:
        override: true
        authorities: scim.read,scim.write,cloud_controller.admin
        secret: (( merge ))
        authorized-grant-types: client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
      cc_service_broker_client: ~

  service_plans:
    rabbit:
      default:
        description: "Developer, 250MB storage, 10 connections"
        free: true
        job_management:
          high_water: 230
          low_water: 20
        configuration:
          capacity: 125
          max_clients: 10
          quota_files: 4
          quota_data_size: 240
          enable_journaling: true
          bandwidth_quotas:
            per_second: 1
            per_day: 10
            time_window: 86400          
          backup:
            enable: false
          lifecycle:
            enable: false
            serialization: enable
            snapshot:
              quota: 1

    mongodb:
      default:
          description: "Developer, shared VM, 250MB storage, 10 connections"
          free: true
          job_management:
            high_water: 230
            low_water: 20
          configuration:
            capacity: 125
            max_clients: 10
            quota_files: 4
            quota_data_size: 240
            enable_journaling: true
            backup:
              enable: true
            lifecycle:
              enable: true
              serialization: enable
              snapshot:
                quota: 1

    postgresql:
      default:
        description: "Developer, 250MB storage, 10 connections"
        free: true
        job_management:
          high_water: 230
          low_water: 20
        configuration:
          capacity: 125
          max_clients: 10
          quota_files: 4
          quota_data_size: 240
          enable_journaling: true
          backup:
            enable: false
          lifecycle:
            enable: false
            serialization: enable
            snapshot:
              quota: 1

  rabbit_gateway:
    token: (( properties.secret ))
    default_plan: "default"
    supported_versions: ["3.0"]
    version_aliases:
      current: "3.0"
    cc_api_version: v2
  rabbit_node:
    supported_versions: ["3.0"]
    default_version: "3.0"
    max_tmp: 900
    m_actions: ["restart"] #restarts crashed rabbitMQ nodes
    health_check_port: 2347

  mongodb_gateway:
    token: (( properties.secret ))
    default_plan: default
    supported_versions: ["2.2"]
    version_aliases:
      current: "2.2"
    cc_api_version: v2
  mongodb_node:
    supported_versions: ["2.2"]
    default_version: "2.2"
    max_tmp: 900
    health_check_port: 2346

  postgresql_gateway:
    token: (( properties.secret ))
    default_plan: default
    supported_versions: ["9.3"]
    version_aliases:
      current: "9.3"
    cc_api_version: v2
  postgresql_node:
    supported_versions: ["9.3"]
    default_version: "9.3"
    max_tmp: 900
    password: (( properties.secret ))
    health_check_port: 2349