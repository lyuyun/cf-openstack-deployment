---
networks: (( merge ))

meta:
  secret: yourSecret
  environment: ~
  domain: yourDomain.xip.io
  protocol: http

  release:
    name: cf

  services_release:
    name: cf-services-contrib

  networks:
    z1:
      apps: cf1
      management: cf1

    z2:
      apps: cf2
      management: cf2

  loggregator_endpoint:
    z1:
      host: (( jobs.loggregator_trafficcontroller_z1.networks.cf1.static_ips.[0] || nil ))
    z2:
      host: (( jobs.loggregator_trafficcontroller_z2.networks.cf2.static_ips.[0] || nil ))


  nfs_server:
    address: (( jobs.nfs_z1.networks.cf1.static_ips.[0] || nil ))
    network: (( .networks.cf1.subnets.[0].range || nil ))
    share: ~

jobs:
  - name: ha_proxy_z1
    release: (( meta.release.name ))
    template: haproxy
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        default: [dns, gateway]
        static_ips: (( static_ips(0) ))
      - name: floating
        static_ips: 130.83.11.169
    properties:
      networks: (( meta.networks.z1 ))
      ha_proxy:
        ssl_pem: |
          -----BEGIN CERTIFICATE-----
          MIID3TCCA0agAwIBAgIJAJ+a0kUJmtWRMA0GCSqGSIb3DQEBBQUAMIGmMQswCQYD
          VQQGEwJERTEQMA4GA1UECBMHR2VybWFueTESMBAGA1UEBxMJRGFybXN0YWR0MRMw
          EQYDVQQKEwpWZWx1bSBPcmcuMRUwEwYDVQQLEwxDbG91ZEZvdW5kcnkxHzAdBgNV
          BAMUFiouMTMwLjgzLjExLjE2OS54aXAuaW8xJDAiBgkqhkiG9w0BCQEWFWpoaWVt
          ZXJAY2xvdWRzY2FsZS5kZTAeFw0xNDA0MjcwODU5MTVaFw0xNTA0MjcwODU5MTVa
          MIGmMQswCQYDVQQGEwJERTEQMA4GA1UECBMHR2VybWFueTESMBAGA1UEBxMJRGFy
          bXN0YWR0MRMwEQYDVQQKEwpWZWx1bSBPcmcuMRUwEwYDVQQLEwxDbG91ZEZvdW5k
          cnkxHzAdBgNVBAMUFiouMTMwLjgzLjExLjE2OS54aXAuaW8xJDAiBgkqhkiG9w0B
          CQEWFWpoaWVtZXJAY2xvdWRzY2FsZS5kZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw
          gYkCgYEA0QvDshYUmJ38Znrt8GJ/qU0twiGElUgFjvlRLi2O6F/K0mMT+r+8AOi3
          f14nUZL8SHym/450G7QE3E2R+04d1UF6WMVRFdLBzx3qGK9lZ619wUcJTUo5da61
          H7hRpcLg+nY1V8Esv1SCi0JxBnPmATviv+BqkH3Fdraa3nUSQ6kCAwEAAaOCAQ8w
          ggELMB0GA1UdDgQWBBRiG2TA4LBvbPpyUQ/bEDsL4MhxIjCB2wYDVR0jBIHTMIHQ
          gBRiG2TA4LBvbPpyUQ/bEDsL4MhxIqGBrKSBqTCBpjELMAkGA1UEBhMCREUxEDAO
          BgNVBAgTB0dlcm1hbnkxEjAQBgNVBAcTCURhcm1zdGFkdDETMBEGA1UEChMKVmVs
          dW0gT3JnLjEVMBMGA1UECxMMQ2xvdWRGb3VuZHJ5MR8wHQYDVQQDFBYqLjEzMC44
          My4xMS4xNjkueGlwLmlvMSQwIgYJKoZIhvcNAQkBFhVqaGllbWVyQGNsb3Vkc2Nh
          bGUuZGWCCQCfmtJFCZrVkTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GB
          AGSULjC7HgBgVIYd5keZ+xp3nT09hV9Y8D/hJVcyP/l82XFJpwW0Eqhijfqr5JIF
          I0MI4YxEjTl9jdRWq2D+7L6HDrhfVpKKQIwtKkVo6KyURUkwy/f0kRyjozucE3y9
          ukpst7VqkgMItJqxgfQQFCqxCmA7l9pkLoxeO3nLHMn3
          -----END CERTIFICATE-----
          -----BEGIN RSA PRIVATE KEY-----
          MIICXQIBAAKBgQDRC8OyFhSYnfxmeu3wYn+pTS3CIYSVSAWO+VEuLY7oX8rSYxP6
          v7wA6Ld/XidRkvxIfKb/jnQbtATcTZH7Th3VQXpYxVEV0sHPHeoYr2VnrX3BRwlN
          Sjl1rrUfuFGlwuD6djVXwSy/VIKLQnEGc+YBO+K/4GqQfcV2tpredRJDqQIDAQAB
          AoGBAJt3yF7VlRO7y07b9cFlP9RFldZe3x+2pIukV/+j2jhvpYO6M820crmqWW3c
          NBmy2vV93yUIaMmBpGvDNOJVQlFSQAftKQup6TW7A0aL0y0EvVxRWUVa9M39Q5nG
          chbDUtn42Q55aBBMD2i6XeJGATY8KvwkbKnvOQrhZfJaGONBAkEA+9Bcncdbu2ox
          TUn5+gNgc66eECH0WO/PNnZtu8JHaIvS0WlHtNVpKqHrZBKQVfsCeP7tkZKqC51F
          PxItn+zthQJBANSFZWfM/qvlONJHqXsH2e4Ov6LyZ7tjG9asiaM/547eZxgEmkcB
          1xkM6IKLRWrmNCj356gbtM0cu2buoT5NVNUCQQCocX2ysUukd2mZWNXVrvKTD4h+
          JChuYaQLu3a19USNI5MXL8Seq28Y7I0oON7CFRFXXLgP+7qx4DcU9JT+eJ99AkB0
          dsISt3GdLBoOir0jMjNI1YZJuwQD2hVoeNdYwm2YiuL+c49EeIqzLLLCz6X0JkHR
          bcHjC4Pyn9tHVmDA7sodAkAuh+A4miDDlmEA8gsBH8TdW4xBnUiOAaefW4kEz2Vd
          PHNrSDC+J5NMiFLA/uEsQblyYXW5t8rR2bst7ojFb6Sc
          -----END RSA PRIVATE KEY-----
      router:
        servers:
          z1: (( jobs.router_z1.networks.cf1.static_ips ))
          z2: (( jobs.router_z2.networks.cf2.static_ips ))

  - name: nats_z1
    release: (( meta.release.name ))
    template: (( merge || ["nats", "nats_stream_forwarder"] ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(10) ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: nats_z2
    release: (( meta.release.name ))
    template: (( merge || ["nats", "nats_stream_forwarder"] ))
    instances: 0
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(10) ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: logs_z1
    release: (( meta.release.name ))
    template: syslog_aggregator
    instances: 0
    resource_pool: medium_z1
    persistent_disk: 100000
    networks:
      - name: cf1
        static_ips: (( static_ips(1) ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: logs_z2
    release: (( meta.release.name ))
    template: syslog_aggregator
    instances: 0
    resource_pool: medium_z2
    persistent_disk: 100000
    networks:
      - name: cf2
        static_ips: (( static_ips(1) ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: stats_z1
    release: (( meta.release.name ))
    template: collector
    instances: 0
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: nfs_z1
    release: (( meta.release.name ))
    template: debian_nfs_server
    instances: 1
    resource_pool: small_z1
    persistent_disk: 102400
    networks:
      - name: cf1
        static_ips: (( static_ips(8) ))

  - name: postgres_z1
    release: (( meta.release.name ))
    template: postgres
    instances: 1
    resource_pool: small_z1
    persistent_disk: 4096
    networks:
    - name: cf1
      static_ips: (( static_ips(2) ))
    properties:
      db: databases

  - name: uaa_z1
    release: (( meta.release.name ))
    template: uaa
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(3) ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: uaa_z2
    release: (( meta.release.name ))
    template: uaa
    instances: 0
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(3) ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: login_z1
    release: (( meta.release.name ))
    template: login
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(4) ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: api_z1
    release: (( meta.release.name ))
    template: cloud_controller_ng
    instances: 1
    resource_pool: small_z1
    persistent_disk: 0
    networks:
      - name: cf1
        static_ips: (( static_ips(5) ))
    properties:
      ccdb: ccdb
      networks: (( meta.networks.z1 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z1.host ))
      nfs_server: (( meta.nfs_server || nil ))

  - name: api_z2
    release: (( meta.release.name ))
    template: cloud_controller_ng
    instances: 0
    resource_pool: large_z2
    persistent_disk: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(5) ))
    properties:
      ccdb: ccdb
      networks: (( meta.networks.z2 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z2.host ))
      nfs_server: (( meta.nfs_server ))

  - name: clock_global
    release: (( meta.release.name ))
    template: cloud_controller_clock
    instances: 1
    resource_pool: small_z1
    persistent_disk: 0
    networks:
      - name: cf1
        static_ips: (( static_ips(6) ))
    properties:
      ccdb: ccdb
      networks: (( meta.networks.z1 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z1.host ))

  - name: api_worker_z1
    release: (( meta.release.name ))
    template: cloud_controller_worker
    instances: 1
    resource_pool: small_z1
    persistent_disk: 0
    networks:
      - name: cf1
    properties:
      ccdb: ccdb
      networks: (( meta.networks.z1 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z1.host ))
      ccng:
        process_group: worker
      nfs_server: (( meta.nfs_server ))

  - name: api_worker_z2
    release: (( meta.release.name ))
    template: cloud_controller_worker
    instances: 0
    resource_pool: small_z2
    persistent_disk: 0
    networks:
      - name: cf2
    properties:
      ccdb: ccdb
      networks: (( meta.networks.z2 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z2.host ))
      ccng:
        process_group: worker
      nfs_server: (( meta.nfs_server ))

  - name: etcd_leader_z1
    release: (( meta.release.name ))
    template: etcd
    instances: 0
    persistent_disk: 10024
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips:  (( static_ips(10) ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: etcd_z1
    release: (( meta.release.name ))
    template: etcd
    instances: 0
    persistent_disk: 10024
    resource_pool: medium_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(10) ))
    properties:
      networks: (( meta.networks.z1 ))
      leader_ip: (( jobs.etcd_leader_z1.networks.cf1.static_ips.[0] || [] ))

  - name: etcd_z2
    release: (( meta.release.name ))
    template: etcd
    instances: 0
    persistent_disk: 10024
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(10) ))
    properties:
      networks: (( meta.networks.z2 ))
      leader_ip: (( jobs.etcd_leader_z1.networks.cf1.static_ips.[0] || [] ))

  - name: hm9000_z1
    release: (( meta.release.name ))
    template: hm9000
    instances: 0
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))
      etcd_ips: (( jobs.etcd_leader_z1.networks.cf1.static_ips jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips ))

  - name: hm9000_z2
    release: (( meta.release.name ))
    template: hm9000
    instances: 0
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))
      etcd_ips: (( jobs.etcd_leader_z1.networks.cf1.static_ips jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips  ))

  - name: runner_z1
    release: (( meta.release.name ))
    template: (( merge || ["dea_next", "dea_logging_agent"] ))
    instances: 1
    update:
      max_in_flight: 1
    resource_pool: runner_z1
    networks:
      - name: cf1
        default: [dns, gateway]
        static_ips: (( static_ips(7) ))
    properties:
      networks: (( meta.networks.z1 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z1.host ))

  - name: runner_z2
    release: (( meta.release.name ))
    template: (( merge || ["dea_next", "dea_logging_agent"] ))
    instances: 0
    update:
      max_in_flight: 1
    resource_pool: runner_z2
    networks:
      - name: cf2
        default: [dns, gateway]
        static_ips: ~
    properties:
      networks: (( meta.networks.z2 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z2.host ))

  - name: loggregator_z1
    release: (( meta.release.name ))
    template: loggregator
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(20) ))
    properties: 
      networks: (( meta.networks.z1 ))

  - name: loggregator_z2
    release: (( meta.release.name ))
    template: loggregator
    instances: 0
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(20) ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: loggregator_trafficcontroller_z1
    release: (( meta.release.name ))
    template: loggregator_trafficcontroller
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(25) ))
    properties:
      networks: (( meta.networks.z1 ))
      traffic_controller:
        zone: z1

  - name: loggregator_trafficcontroller_z2
    release: (( meta.release.name ))
    template: loggregator_trafficcontroller
    instances: 0
    resource_pool: small_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(25) ))
    properties:
      networks: (( meta.networks.z2 ))
      traffic_controller:
        zone: z2

  - name: router_z1
    release: (( meta.release.name ))
    template: gorouter
    instances: 1
    resource_pool: router_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(1) )) 
    properties:
      networks: (( meta.networks.z1 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z1.host ))

  - name: router_z2
    release: (( meta.release.name ))
    template: gorouter
    instances: 0
    resource_pool: router_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(1) ))
    properties:
      networks: (( meta.networks.z2 ))
      loggregator_endpoint:
        host: (( meta.loggregator_endpoint.z2.host ))

### Service Section ###
  - name: rabbit_z1
    release: (( meta.services_release.name ))
    template: 
      - rabbit_node_ng
      - rabbit_gateway
    instances: 1
    resource_pool: small_z1
    persistent_disk: 10000
    properties:
      plan: default
    networks:
      - name: cf1
        static_ips: (( static_ips(41) ))

  - name: mongodb_z1
    release: (( meta.services_release.name ))
    template: 
    - mongodb_gateway
    - mongodb_node_ng
    instances: 1
    resource_pool: small_z1
    persistent_disk: 65536
    properties:
      plan: default
    networks:
      - name: cf1
        static_ips: (( static_ips(40) ))

  - name: postgresql_z1
    release: (( meta.services_release.name ))
    template: 
    - postgresql_gateway_ng
    - postgresql_node_ng
    instances: 1
    resource_pool: small_z1
    persistent_disk: 65536
    properties:
      postgresql_node:
        plan: default
    networks:
      - name: cf1
        static_ips: (( static_ips(42) ))

# Property Section
properties:
  domain: (( merge ))
  ssl:
    skip_cert_verify: (( merge || true ))
  system_domain: (( domain ))
  system_domain_organization: ~
  app_domains: (( [domain] ))

  disk_quota_enabled: true
  cc_api_version: v2
  request_timeout_in_seconds: 300

  etcd:
    machines: (( jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips || []))

  etcd_metrics_server:
    nats:
      machines: (( .properties.nats.machines ))
      username: (( .properties.nats.user ))
      password: (( .properties.nats.password ))

  databases:
    db_scheme: postgres
    address: (( jobs.postgres_z1.networks.cf1.static_ips.[0] ))
    port: 5524
    roles: (( merge))
    databases:
      - tag: cc
        name: ccdb
        citext: true
      - tag: uaa
        name: uaadb
        citext: true

  nats:
    user: (( merge ))
    password: (( merge ))
    address: (( jobs.nats_z1.networks.cf1.static_ips.[0] ))
    machines:
     - (( jobs.nats_z1.networks.cf1.static_ips.[0] ))
    port: 4222
    use_gnatsd: (( merge || true ))
    debug: false
    trace: false


  uaa_client_id: "cf"
  uaa_endpoint: (( merge ))
  uaa_client_auth_credentials:
    username: (( merge ))
    password: (( merge )) # CHANGE

  dea_next:
    memory_mb: (( merge ))
    memory_overcommit_factor: 3
    disk_mb: (( merge ))
    disk_overcommit_factor: 2
    staging_disk_inode_limit: 200000
    instance_disk_inode_limit: 200000
    deny_networks: (( merge || [] ))
    allow_networks: (( merge || [] ))
    kernel_network_tuning_enabled: true
    directory_server_protocol: (( meta.protocol )) # NEEDS TO BE CHANGED
    evacuation_bail_out_time_in_seconds: 600

  loggregator_endpoint:
    shared_secret: (( merge ))
    host: (( jobs.loggregator_trafficcontroller_z1.networks.cf1.static_ips.[0] ))
    port: 3456

  logger_endpoint:  ~

  loggregator:
    servers:
      z1: (( jobs.loggregator_z1.networks.cf1.static_ips ))
      z2: (( jobs.loggregator_z2.networks.cf2.static_ips ))
    maxRetainedLogMessages: 1000
    debug: (( merge || true ))
    blacklisted_syslog_ranges: ~
    nats:
      user: nats
      password: (( merge ))
      address: (( jobs.nats_z1.networks.cf1.static_ips.[0] ))
      port: 4222

  cc: (( merge ))
  ccdb: 
    db_scheme: postgres
    address: (( jobs.postgres_z1.networks.cf1.static_ips.[0] ))
    port: 5524
    roles: (( merge ))
    databases:
      - tag: cc
        name: ccdb
        citext: true

  ccng: (( cc ))
  ccdb_ng:
    db_scheme: postgres
    address: (( jobs.postgres_z1.networks.cf1.static_ips.[0] ))
    port: 5524
    roles: (( merge ))
    databases:
      - tag: cc
        name: ccdb
        citext: true

  uaa: (( merge ))
  uaadb:
    db_scheme: postgresql
    address: (( jobs.postgres_z1.networks.cf1.static_ips.[0] ))
    port: 5524
    roles: (( merge ))
    databases:
      - tag: uaa
        name: uaadb
        citext: true

  login: (( merge ))

  router:
    status:
      user: (( merge ))
      password: (( merge ))

  syslog_aggregator: ~

  nfs_server:
    address: (( jobs.nfs_z1.networks.cf1.static_ips.[0] || nil ))
    network: (( networks.cf1.subnets.[0].range ))

  debian_nfs_server:
    no_root_squash: true

  collector:
    use_datadog: true
    datadog_api_key: ""
    datadog_application_key: ""
    deployment_name: (( meta.environment ))
    use_tsdb: false

  opentsdb: (( merge || nil ))

  service_plans:
    rabbit: (( merge ))
    mongodb: (( merge ))
    postgresql: (( merge ))

  rabbit_gateway: (( merge ))
  rabbit_node: (( merge ))

  mongodb_gateway: (( merge ))
  mongodb_node: (( merge ))

  postgresql_gateway: (( merge ))
  postgresql_node: (( merge ))